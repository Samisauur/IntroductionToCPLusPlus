// Author:  Sami Villatoro
// Program: A simple bank atm system.
// Created: 10/18/2023
// Updated: 11/30/2023
// Pre:     None
// Post:    Allows user to withdraw, deposit, or check balance.

#include <iostream>
using namespace std;

// Function Prototypes:
char getactInput();
float checkbalance(float);
float withdraw(float, float);
float deposit(float, float);

int main() {
    int account, sum;
    char option, cont;
    float balance=1000;

    do {
        option = getactInput();
        switch(option)
        {
            case 'A':
            case 'a':
                    checkbalance(balance);
                    break;
            case 'B':
            case 'b':
                    cout << "Enter an ammount: ";
                    cin >> sum;
                    balance = withdraw(balance, sum);
                    checkbalance(balance);
                    break;
            case 'C':
            case 'c':
                    cout << "Enter an ammount: ";
                    cin >> sum;
                    balance = deposit(sum, balance);
                    checkbalance(balance);
                    break;
            default:
                cout << "ERROR: Invalid Option" << endl
                    << "Select a valid Option: ";
                break;
        }
        cout << "\nWould you like to continue? (Y or N): ";
        cin >> cont;
    }while(cont == 'Y' || cont == 'y');
    return 0;
}
// Function definitions here
char getactInput() {
    char option;
    cout << "Welcome to Bobcat Banking!" << endl;
    cout << "Select an option from the following: " << endl;
    cout << "a) Check Balance" << endl;
    cout << "b) Withdraw" << endl;
    cout << "c) Deposit" << endl;
    cin >> option;
    return option;
}
float checkbalance(float balance) {
    cout << "Your account balance is $" << balance << endl;
    return 0.0;
}

float withdraw(float balance, float sum) {
    if (sum < balance) {
    balance = balance - sum;
        }
    else {
        cout << "Not enough in balance.";
        }
return balance;
}

float deposit(float balance, float sum) {
    balance = balance + sum;
    return balance;
}
